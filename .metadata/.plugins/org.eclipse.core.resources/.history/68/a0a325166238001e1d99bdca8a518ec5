package com.OrangeHRM;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.Test;

public class OHRMAddMultipleEmployee extends BaseTest {
	
	//no need because we are extending BaseTest class
		//WebDriver driver;  
		//String applicationUrlAddress = "http://127.0.01/OrangeHrm-4.2.0.1/symfony/web/index.php/dashboard";
		
	
	    Logger log = Logger.getLogger("OHRMAddMultipleEmployee");
	    
		FileInputStream addEmployeeFile;
		XSSFWorkbook addEmployeeWorkBook;
		XSSFSheet addDataSheet;
		XSSFRow row;
		FileOutputStream outputFile;
		
		FileInputStream propertiesFile;
		Properties properties;

		String autoGeneratedId;
		By addEmployeeElementproperty;
		WebElement addEmployeeElement;
		
		By firstNameElementProperty;
		By middleNameElementProperty;
		By lastNameElementProperty;
		
		
		WebElement firstNameElement;
	    WebElement middleNameElement;
	    WebElement lastNameElement;
		
		@Test(priority=1,description="loginTest")
		public void loginFunctionalityTest() throws IOException {
			
			
			//configuring the Log4j properties file 
			PropertyConfigurator.configure("Log4j.properties");
			
			//identify the properties file
			
			propertiesFile = new FileInputStream("./src/com/PropertiesFiles/OHRMPropertyFile.properties");
			log.info("Successfully identified the properties file");
			
			//creating an object for properties class
			
			properties = new Properties();
			
			//loading the properties of file - using properties class object(properties)
			
			properties.load(propertiesFile);

			
			//identifying userName element 
		    By userNameElementProperty = By.id(properties.getProperty("loginWebPageUserNameProperty"));
			
		    //finding userName element 
			WebElement userNameElement = driver.findElement(userNameElementProperty);
			
			//sending the keys to user name element
			//storing the user name into a variable
			
			String userid = "rahulsoni";
			log.info("The user name is : "+userid);
			
			userNameElement.sendKeys(userid);
			log.info("sending the user name to user name text box");
			
			//<input name="txtPassword" id="txtPassword" autocomplete="off" type="password">
			
			//locator/attribute - name
			//selector/value - txtPassword
			
			//identifying password element
		    By passwordElementProperty = By.name(properties.getProperty("loginWebPagePasswordProperty"));
			
		    //finding password element
			WebElement passwordElement = driver.findElement(passwordElementProperty);
			
			//sending the keys to password element
			//storing the password into a variable
			
			String passWord = "Rahul@1995";
			log.info("The password is :- "+passWord);
			
			//sending the keys through a variable to password element text box
			passwordElement.sendKeys(passWord);
			log.info("sending the password to pasword text box");
			
			//<input type="submit" name="Submit" class="button" id="btnLogin" value="LOGIN">
			
			//locator/attribute - className
			//selector/value - button
			
			//identifying button element
		    By buttonElementProperty = By.className(properties.getProperty("loginWebPageLoginButtonProperty"));
			
		    //finding button element
			WebElement buttonElement = driver.findElement(buttonElementProperty);
			
			//performing click operation on button element 
			buttonElement.click();
			log.info("******* Successfully performed click operation on login button********");
		}
		
		
		@Test(priority=2,description="adding the employee Test")
		public void addingEmployeeTest() throws IOException, InterruptedException {
								

			//<input name="txtUsername" id="txtUsername" type="text">
			
			//locator/attribute - id
			//selector/value - txtUsername
			
			// <b>PIM</b>
			//identifying link element "PIM"
			By pimElementProperty = By.linkText(properties.getProperty("loginWebPagePIMElementProperty"));
			
			//finding link  element PIM
			WebElement pimElement = driver.findElement(pimElementProperty);
			
			//performing mouse hover operation on PIM Link Element
			Actions act = new Actions(driver);
			
			act.moveToElement(pimElement).build().perform();
			
			
			
			//<input class="formInputText" maxlength="30" type="text" name="firstName" id="firstName">
			//<input class="formInputText" maxlength="30" type="text" name="middleName" id="middleName">
			//<input class="formInputText" maxlength="30" type="text" name="lastName" id="lastName">
			
			
		    //identifying the excel file
		    addEmployeeFile = new FileInputStream("./src/com/OHRMAddEmployeeDataFiles/AddMultipleEmployeeTestData.xlsx");
		    
		    //identify the workbook in the the file
		    addEmployeeWorkBook = new XSSFWorkbook(addEmployeeFile);
		    
		    // identify the sheet in the workbook
		    addDataSheet = addEmployeeWorkBook.getSheet("Sheet1");
		    
		    //in the sheet identify number of active rows
		    int rowCount = addDataSheet.getLastRowNum();
		    //System.out.println(rowCount);
		    log.info("The number of rows present in the sheet are :- "+rowCount);
		    
		    // to go to all active rows
		    for(int rowIndex=1;rowIndex<=rowCount;rowIndex++)
		    {
		    	
		    	row = addDataSheet.getRow(rowIndex);
		    	
		    	int rowOfCellCount = row.getLastCellNum();
		    	
		    	//System.out.println(rowOfCellCount);
		    	log.info("The total number of row of cells present in the sheet are :- "+rowOfCellCount);
		    	
		    	//going to every cell of active row
		    	for(int rowOfCellIndex=0;rowOfCellIndex<rowOfCellCount;rowOfCellIndex++) {
		    		
		    		//getting first,middle,last name data from excel sheet row's active cell
		    		//and sending the data to firstName,middlename and last name element text box
		    		
		    		//<a href="/OrangeHrm-4.2.0.1/symfony/web/index.php/pim/addEmployee" id="menu_pim_addEmployee">Add Employee</a>
					
					//identifying link element "Add Employee"
					addEmployeeElementproperty = By.linkText(properties.getProperty("loginWebPageAddEmployeeElementProperty"));
					
					//finding link element "Add Employee"
					addEmployeeElement = driver.findElement(addEmployeeElementproperty);
					
					addEmployeeElement.click();
		    		
		    		//identifying first,middle,last TextBox Element 
					firstNameElementProperty = By.id(properties.getProperty("loginWebPageFirstNameElementProperty"));
					middleNameElementProperty = By.id(properties.getProperty("loginWebPageMiddleNameElementProperty"));
					lastNameElementProperty = By.id(properties.getProperty("loginWebPageLastNameElementProperty"));
				    
					//finding first,middle,last TextBox Element
				    firstNameElement = driver.findElement(firstNameElementProperty);	
				    middleNameElement = driver.findElement(middleNameElementProperty);
				    lastNameElement = driver.findElement(lastNameElementProperty);
				    
				    // <input class="formInputText valid" maxlength="10" type="text" name="employeeId" value="0002" id="employeeId">
				    
				    //identifying link element "employeeId"
				    
				    By employeeIdElementProperty = By.id(properties.getProperty("loginWebPageEmployeeIdElementProperty"));
				    
				    //identifying employeeId text box element
				    WebElement autoGeneratedIdElement = driver.findElement(employeeIdElementProperty);
				    
				    //finding(autogenerated Id) the value stored in employeeId text box element
				    autoGeneratedId = autoGeneratedIdElement.getAttribute("value");
				    
				    //System.out.println("The value of auto generated id is : "+autoGeneratedId);
				    log.info("The value of auto generated id is : "+autoGeneratedId);
		    		
		    		String fName = addDataSheet.getRow(rowIndex).getCell(rowOfCellIndex).getStringCellValue();
		    		firstNameElement.sendKeys(fName);
		    		log.info("The value of first name  is : "+fName);
		    		rowOfCellIndex++;
		    		
		    		String mName = addDataSheet.getRow(rowIndex).getCell(rowOfCellIndex).getStringCellValue();
		    		middleNameElement.sendKeys(mName);
		    		log.info("The value of middle name  is : "+mName);
		    		rowOfCellIndex++;
		    		
		    		String lName = addDataSheet.getRow(rowIndex).getCell(rowOfCellIndex).getStringCellValue();
		    		lastNameElement.sendKeys(lName);
		    		log.info("The value of last name  is : "+lName);
		    		rowOfCellIndex++;
		    		
		    		addDataSheet.getRow(rowIndex).createCell(rowOfCellIndex).setCellValue(autoGeneratedId);
		   		    
		   		    //<input type="button" class="" id="btnSave" value="Save">
		   		    
		   		    //identifying the save button element using id
		    		
		    		By btnElementProperty = By.id("btnSave");
		    	    
		    	    //finding the save button element using id
		    	    WebElement btnElement = driver.findElement(btnElementProperty);
		    	    
		    	    //performing click operation on button element
		    	    
		    	    btnElement.click();
		    	    log.info("******* Successfully performed click operation on save button********");
		    	    
		    	    	    		   		    
		   	}
		    	//identifying the path to save the file
				outputFile = new FileOutputStream("./src/com/OHRMAddEmployeeDataResultFiles/AddMultipleEmployeeTestDataResult.xlsx");
				
				//saving the operations perfomed on the workbook
	   		    addEmployeeWorkBook.write(outputFile);
	  	}
		    
		   
 	}
		
		@Test(priority=3,description="Testing logout functionality")
		 public void logoutTest() {
			 
			By welcomeAdminElementProperty = By.linkText(properties.getProperty("loginWebPageWelcomeAdminElementProperty"));
			
			WebElement welcomeAdminElement = driver.findElement(welcomeAdminElementProperty);
			
			welcomeAdminElement.click();
			log.info("******* Successfully performed click operation on Welcome Admin Link********");
			
			//Getting No such element exception in finding element logout 
			
			//<a href="/OrangeHrm-4.2.0.1/symfony/web/index.php/auth/logout">Logout</a>
			
			WebDriverWait wait = new WebDriverWait(driver, 10);
			
			wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText("Logout")));
			
			By logoutElementLocator = By.linkText("Logout");
			
			WebElement logoutElement = driver.findElement(logoutElementLocator);
			
			logoutElement.click();
			log.info("******* Successfully performed click operation on logout link********");
			
		 }

}